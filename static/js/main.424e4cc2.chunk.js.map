{"version":3,"sources":["components/ProtectedRoute/index.js","components/NavBar/index.js","components/HomeMovieItems/index.js","components/Footer/index.js","components/Home/index.js","components/LoginPage/index.js","components/MovieItems/index.js","components/FailurePage/index.js","components/Popular/index.js","components/SearchPage/index.js","components/SimilarMovies/index.js","components/MovieDetails/index.js","components/AccountPage/index.js","components/NotFoundPage/index.js","App.js","index.js"],"names":["ProtectedRoute","props","undefined","Cookies","get","to","NavBar","state","fullMenu","searchValue","menuShow","setState","menuHide","getSearchInput","event","target","value","onSearch","getSearchMoviesData","this","searchRoute","searchContainer","searchBtn","searchIcon","homeRoute","isHome","popularRoute","isPopular","accountRoute","isAccount","className","alt","src","onChange","placeholder","type","onClick","testid","Component","HomeMovieItems","eachMovie","title","posterPath","id","Footer","renderOriginalsConstraints","renderTrendingConstraints","Home","renderOriginalsStatus","renderTrendingStatus","originalMoviesList","trendingMoviesList","randomMovie","getOriginalMoviesData","a","jwtToken","options","method","headers","Authorization","fetch","response","ok","json","data","fetchedOriginalsData","results","map","backdropPath","backdrop_path","overview","poster_path","randomNumber","Math","floor","random","length","retryOriginalsMoviesData","getTrendingMoviesData","fetchedTrendingData","retryTrendingMoviesData","renderPosterSuccessView","style","backgroundImage","renderOriginalsSuccessView","renderTrendingSuccessView","renderPosterErrorView","renderOriginalsErrorView","renderTrendingErrorView","renderPosterLoadingView","color","height","width","renderThumbnailLoadingView","renderOriginalsSwitchViews","renderTrendingSwitchViews","renderPosterSwitchViews","Login","username","password","errMsg","getUsername","getPassword","submitLogin","preventDefault","userDetails","body","JSON","stringify","onSuccessLogin","jwt_token","onFailLogin","error_msg","set","expires","history","replace","onSubmit","htmlFor","MovieItems","FailurePage","tryAgain","renderConstraints","Popular","popularMoviesList","renderStatus","getPopularMoviesData","fetchedPopularMoviesData","tryAgainPopularData","renderFailureView","renderSuccessView","renderLoaderView","renderSwitchView","SearchPage","searchResultsList","searchApi","fetchedSearchMoviesData","renderNoResultsView","tryAgainSearchData","SimilarMovies","AvailableLanguages","englishName","eachItem","GenreList","name","MovieDetails","movieDetailsList","getMovieDetails","match","params","movieDetailsApi","updatedGenreList","movie_details","genres","eachGenre","updatedSimilarMovies","similar_movies","updatedSpokenLanguages","spoken_languages","eachLanguage","english_name","updatedData","adult","budget","releaseDate","release_date","runtime","similarMovies","spokenLanguages","voteAverage","vote_average","voteCount","vote_count","tryAgainMoviesData","inHours","inMinutes","runTimeInHoursAndMinutes","certificateName","releaseYear","format","Date","releaseDateFormat","AccountPage","remove","NotFoundPage","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.424e4cc2.chunk.js","sourcesContent":["import {Route, Redirect} from 'react-router-dom'\nimport Cookies from 'js-cookie'\n\nfunction ProtectedRoute(props) {\n  const jwtToken = Cookies.get('jwt_token')\n  if (jwtToken === undefined) {\n    return <Redirect to=\"/login\" />\n  }\n  return <Route {...props} />\n}\nexport default ProtectedRoute\n","import {Component} from 'react'\nimport {Link} from 'react-router-dom'\n\nimport {HiOutlineSearch} from 'react-icons/hi'\nimport {MdMenuOpen} from 'react-icons/md'\nimport {AiFillCloseCircle} from 'react-icons/ai'\nimport './index.css'\n\nclass NavBar extends Component {\n  state = {fullMenu: false, searchValue: ''}\n\n  menuShow = () => {\n    this.setState({fullMenu: true})\n  }\n\n  menuHide = () => {\n    this.setState({fullMenu: false})\n  }\n\n  getSearchInput = event => {\n    this.setState({searchValue: event.target.value})\n  }\n\n  onSearch = () => {\n    const {getSearchMoviesData} = this.props\n    const {searchValue} = this.state\n    if (searchValue !== '') {\n      getSearchMoviesData(searchValue)\n    }\n  }\n\n  render() {\n    const {fullMenu, searchValue} = this.state\n    const {searchRoute, isHome, isPopular, isAccount} = this.props\n    const searchContainer = searchRoute\n      ? 'search-input-route-container search-input-container'\n      : 'search-input-container'\n    const searchBtn = searchRoute\n      ? 'search-route-btn search-button'\n      : 'search-button'\n    const searchIcon = searchRoute ? 'icons search-route-icon' : 'icons'\n\n    const homeRoute = isHome ? 'menu-items highlight' : 'menu-items'\n    const popularRoute = isPopular ? 'menu-items highlight' : 'menu-items'\n    const accountRoute = isAccount ? 'menu-items highlight' : 'menu-items'\n\n    return (\n      <nav className=\"nav-bar\">\n        <div className=\"header\">\n          <Link to=\"/\" className=\"img-link\">\n            <img\n              className=\"header-web-site\"\n              alt=\"website logo\"\n              src=\"https://res.cloudinary.com/dkbxi5qts/image/upload/v1660479354/Group_7399_nn7x3u.png\"\n            />\n          </Link>\n          <ul className=\"show-menu show1\">\n            <Link to=\"/\" className={homeRoute}>\n              <li>Home</li>\n            </Link>\n            <Link to=\"/popular\" className={popularRoute}>\n              <li>Popular</li>\n            </Link>\n          </ul>\n          <div className=\"icons-container\">\n            <div className={searchContainer}>\n              {searchRoute && (\n                <input\n                  value={searchValue}\n                  onChange={this.getSearchInput}\n                  placeholder=\"Search\"\n                  type=\"search\"\n                  className=\"search-input\"\n                />\n              )}\n              <Link to=\"/search\">\n                <button\n                  onClick={this.onSearch}\n                  testid=\"searchButton\"\n                  type=\"button\"\n                  className={searchBtn}\n                >\n                  <HiOutlineSearch className={searchIcon} />\n                </button>\n              </Link>\n            </div>\n            <Link to=\"/account\">\n              <img\n                className=\"avatar show1\"\n                alt=\"profile\"\n                src=\"https://res.cloudinary.com/dkbxi5qts/image/upload/v1660573232/Avatar_giy0y5.png\"\n              />\n            </Link>\n            <button\n              onClick={this.menuShow}\n              type=\"button\"\n              className=\"show close-btn\"\n            >\n              <MdMenuOpen className=\"hamburger icons\" />\n            </button>\n          </div>\n        </div>\n\n        <nav className=\"show\">\n          {fullMenu && (\n            <ul className=\"show-menu\">\n              <Link to=\"/\" className={homeRoute}>\n                <li>Home</li>\n              </Link>\n              <Link to=\"/popular\" className={popularRoute}>\n                <li>Popular</li>\n              </Link>\n              <Link to=\"/account\" className={accountRoute}>\n                <li>Account</li>\n              </Link>\n              <li>\n                <button\n                  onClick={this.menuHide}\n                  className=\"close-btn\"\n                  type=\"button\"\n                >\n                  <AiFillCloseCircle className=\"close icons\" />\n                </button>\n              </li>\n            </ul>\n          )}\n        </nav>\n      </nav>\n    )\n  }\n}\n\nexport default NavBar\n","import {Link} from 'react-router-dom'\n\nimport './index.css'\n\nconst HomeMovieItems = props => {\n  const {eachMovie} = props\n  const {title, posterPath, id} = eachMovie\n  return (\n    <Link to={`/movies/${id}`}>\n      <li>\n        <img className=\"thumbnail-img\" alt={title} src={posterPath} />\n      </li>\n    </Link>\n  )\n}\nexport default HomeMovieItems\n","import {FaGoogle, FaTwitter, FaInstagram, FaYoutube} from 'react-icons/fa'\n\nimport './index.css'\n\nconst Footer = () => (\n  <div className=\"footer-page\">\n    <div className=\"contact-icon-container\">\n      <FaGoogle className=\"contact-icon\" />\n      <FaTwitter className=\"contact-icon\" />\n      <FaInstagram className=\"contact-icon\" />\n      <FaYoutube className=\"contact-icon\" />\n    </div>\n    <p className=\"contact-text\">Contact us</p>\n  </div>\n)\n\nexport default Footer\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport Slider from 'react-slick'\nimport Loader from 'react-loader-spinner'\n\nimport NavBar from '../NavBar'\nimport HomeMovieItems from '../HomeMovieItems'\nimport Footer from '../Footer'\n\nimport './index.css'\n\nconst settings = {\n  dots: true,\n  infinite: true,\n  speed: 500,\n  slidesToShow: 4,\n  slidesToScroll: 4,\n\n  responsive: [\n    {\n      breakpoint: 1024,\n      settings: {\n        slidesToShow: 4,\n        slidesToScroll: 1,\n      },\n    },\n    {\n      breakpoint: 400,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 1,\n      },\n    },\n  ],\n}\n\nconst renderOriginalsConstraints = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  fail: 'FAIL',\n  loading: 'LOADING',\n}\nconst renderTrendingConstraints = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  fail: 'FAIL',\n  loading: 'LOADING',\n}\n\nconst isHome = true\n\nclass Home extends Component {\n  state = {\n    renderOriginalsStatus: renderOriginalsConstraints.initial,\n    renderTrendingStatus: renderTrendingConstraints.initial,\n    originalMoviesList: [],\n    trendingMoviesList: [],\n    randomMovie: [],\n  }\n\n  componentDidMount() {\n    this.getTrendingMoviesData()\n    this.getOriginalMoviesData()\n  }\n\n  getOriginalMoviesData = async () => {\n    this.setState({\n      renderOriginalsStatus: renderOriginalsConstraints.loading,\n    })\n    const jwtToken = Cookies.get('jwt_token')\n    const options = {\n      method: 'GET',\n      headers: {Authorization: `Bearer ${jwtToken}`},\n    }\n    const originalsDataApi = 'https://apis.ccbp.in/movies-app/originals'\n    const response = await fetch(originalsDataApi, options)\n    if (response.ok === true) {\n      const data = await response.json()\n      const fetchedOriginalsData = data.results.map(eachMovie => ({\n        backdropPath: eachMovie.backdrop_path,\n        id: eachMovie.id,\n        overview: eachMovie.overview,\n        posterPath: eachMovie.poster_path,\n        title: eachMovie.title,\n      }))\n      const randomNumber = Math.floor(\n        Math.random() * fetchedOriginalsData.length,\n      )\n      const randomMovie = fetchedOriginalsData[randomNumber]\n      this.setState({\n        originalMoviesList: fetchedOriginalsData,\n        renderOriginalsStatus: renderOriginalsConstraints.success,\n        randomMovie,\n      })\n    } else {\n      this.setState({\n        renderOriginalsStatus: renderOriginalsConstraints.fail,\n      })\n    }\n  }\n\n  retryOriginalsMoviesData = () => {\n    this.getOriginalMoviesData()\n  }\n\n  getTrendingMoviesData = async () => {\n    this.setState({renderTrendingStatus: renderTrendingConstraints.loading})\n    const jwtToken = Cookies.get('jwt_token')\n    const options = {\n      method: 'GET',\n      headers: {Authorization: `Bearer ${jwtToken}`},\n    }\n    const trendingDataApi = 'https://apis.ccbp.in/movies-app/trending-movies'\n    const response = await fetch(trendingDataApi, options)\n    if (response.ok === true) {\n      const data = await response.json()\n      const fetchedTrendingData = data.results.map(eachMovie => ({\n        backdropPath: eachMovie.backdrop_path,\n        id: eachMovie.id,\n        overview: eachMovie.overview,\n        posterPath: eachMovie.poster_path,\n        title: eachMovie.title,\n      }))\n      this.setState({\n        trendingMoviesList: fetchedTrendingData,\n        renderTrendingStatus: renderTrendingConstraints.success,\n      })\n    } else {\n      this.setState({renderTrendingStatus: renderTrendingConstraints.fail})\n    }\n  }\n\n  retryTrendingMoviesData = () => {\n    this.getTrendingMoviesData()\n  }\n\n  renderPosterSuccessView = () => {\n    const {randomMovie} = this.state\n    const {title, overview, backdropPath} = randomMovie\n\n    return (\n      <div\n        style={{backgroundImage: `url(${backdropPath})`}}\n        className=\"home-page\"\n      >\n        <NavBar isHome={isHome} />\n        <div className=\"home-movie-page\">\n          <h1 className=\"title\">{title}</h1>\n          <h1 className=\"over-view\">{overview}</h1>\n          <button type=\"button\" className=\"play-btn\">\n            Play\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  renderOriginalsSuccessView = () => {\n    const {originalMoviesList} = this.state\n    return (\n      <>\n        <div className=\"movies-list-page\">\n          {originalMoviesList.map(eachMovie => (\n            <HomeMovieItems eachMovie={eachMovie} key={eachMovie.id} />\n          ))}\n        </div>\n      </>\n    )\n  }\n\n  renderTrendingSuccessView = () => {\n    const {trendingMoviesList} = this.state\n\n    return (\n      <>\n        <div className=\"movies-list-page\">\n          {trendingMoviesList.map(eachMovie => (\n            <HomeMovieItems eachMovie={eachMovie} key={eachMovie.id} />\n          ))}\n        </div>\n      </>\n    )\n  }\n\n  renderPosterErrorView = () => (\n    <>\n      <NavBar />\n      <div className=\"error-page-container\">\n        <div className=\"error-page\">\n          <img\n            className=\"warning-icon\"\n            alt=\"failure view\"\n            src=\"https://res.cloudinary.com/dkbxi5qts/image/upload/v1660451047/movies%20prime%20app/alert-triangle_najaul.png\"\n          />\n          <p className=\"poster-error-msg\">\n            Something went wrong. Please try again\n          </p>\n          <button\n            onClick={this.retryOriginalsMoviesData}\n            className=\"poster-try-again-btn\"\n            type=\"button\"\n          >\n            Try Again\n          </button>\n        </div>\n      </div>\n    </>\n  )\n\n  renderOriginalsErrorView = () => (\n    <div className=\"error-page-container\">\n      <div className=\"thumbnail-error-page\">\n        <img\n          className=\"thumbnail-warning-icon\"\n          alt=\"failure view\"\n          src=\"https://res.cloudinary.com/dkbxi5qts/image/upload/v1660451047/movies%20prime%20app/alert-triangle_najaul.png\"\n        />\n        <p className=\"thumbnail-error-msg\">\n          Something went wrong. Please try again\n        </p>\n        <button\n          onClick={this.retryOriginalsMoviesData}\n          className=\"thumbnail-try-again-btn\"\n          type=\"button\"\n        >\n          Try Again\n        </button>\n      </div>\n    </div>\n  )\n\n  renderTrendingErrorView = () => (\n    <div className=\"error-page-container\">\n      <div className=\"thumbnail-error-page\">\n        <img\n          className=\"thumbnail-warning-icon\"\n          alt=\"failure view\"\n          src=\"https://res.cloudinary.com/dkbxi5qts/image/upload/v1660451047/movies%20prime%20app/alert-triangle_najaul.png\"\n        />\n        <p className=\"thumbnail-error-msg\">\n          Something went wrong. Please try again\n        </p>\n        <button\n          onClick={this.retryTrendingMoviesData}\n          className=\"thumbnail-try-again-btn\"\n          type=\"button\"\n        >\n          Try Again\n        </button>\n      </div>\n    </div>\n  )\n\n  renderPosterLoadingView = () => (\n    <>\n      <NavBar />\n      <div className=\"error-page-container\">\n        <div className=\"error-page\">\n          <div className=\"loader-container\" testid=\"loader\">\n            <Loader type=\"TailSpin\" color=\"#D81F26\" height={50} width={50} />\n          </div>\n        </div>\n      </div>\n    </>\n  )\n\n  renderThumbnailLoadingView = () => (\n    <div className=\"error-page-container\">\n      <div className=\"thumbnail-error-page\">\n        <div className=\"loader-container\" testid=\"loader\">\n          <Loader type=\"TailSpin\" color=\"#D81F26\" height={50} width={50} />\n        </div>\n      </div>\n    </div>\n  )\n\n  renderOriginalsSwitchViews = () => {\n    const {renderOriginalsStatus} = this.state\n    switch (renderOriginalsStatus) {\n      case renderOriginalsConstraints.loading:\n        return this.renderThumbnailLoadingView()\n      case renderOriginalsConstraints.success:\n        return this.renderOriginalsSuccessView()\n      case renderOriginalsConstraints.fail:\n        return this.renderOriginalsErrorView()\n      default:\n        return null\n    }\n  }\n\n  renderTrendingSwitchViews = () => {\n    const {renderTrendingStatus} = this.state\n    switch (renderTrendingStatus) {\n      case renderTrendingConstraints.loading:\n        return this.renderThumbnailLoadingView()\n      case renderTrendingConstraints.success:\n        return this.renderTrendingSuccessView()\n      case renderTrendingConstraints.fail:\n        return this.renderTrendingErrorView()\n      default:\n        return null\n    }\n  }\n\n  renderPosterSwitchViews = () => {\n    const {renderOriginalsStatus} = this.state\n    switch (renderOriginalsStatus) {\n      case renderOriginalsConstraints.loading:\n        return this.renderPosterLoadingView()\n      case renderOriginalsConstraints.success:\n        return this.renderPosterSuccessView()\n      case renderOriginalsConstraints.fail:\n        return this.renderPosterErrorView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"home-page\">\n        {this.renderPosterSwitchViews()}\n        <h1 className=\"movie-section-name\">Trending Now</h1>\n        {this.renderTrendingSwitchViews()}\n        <h1 className=\"movie-section-name\">Originals</h1>\n        {this.renderOriginalsSwitchViews()}\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default Home\n","import {Component} from 'react'\nimport {Redirect} from 'react-router-dom'\nimport Cookies from 'js-cookie'\n\nimport './index.css'\n\nclass Login extends Component {\n  state = {username: '', password: '', errMsg: ''}\n\n  getUsername = event => {\n    this.setState({username: event.target.value})\n  }\n\n  getPassword = event => {\n    this.setState({password: event.target.value})\n  }\n\n  submitLogin = async event => {\n    event.preventDefault()\n    const {username, password} = this.state\n    const userDetails = {username, password}\n    const loginUrl = 'https://apis.ccbp.in/login'\n    const options = {\n      method: 'POST',\n      body: JSON.stringify(userDetails),\n    }\n    const response = await fetch(loginUrl, options)\n    const data = await response.json()\n    if (response.ok) {\n      this.onSuccessLogin(data.jwt_token)\n    } else {\n      this.onFailLogin(data.error_msg)\n    }\n  }\n\n  onSuccessLogin = jwtToken => {\n    Cookies.set('jwt_token', jwtToken, {expires: 30})\n    const {history} = this.props\n    history.replace('/')\n  }\n\n  onFailLogin = errMsg => {\n    this.setState({errMsg})\n  }\n\n  render() {\n    const {username, password, errMsg} = this.state\n    const jwtToken = Cookies.get('jwt_token')\n    if (jwtToken !== undefined) {\n      return <Redirect to=\"/\" />\n    }\n    return (\n      <div className=\"login-container\">\n        <img\n          className=\"login-website-logo\"\n          alt=\"login website logo\"\n          src=\"https://res.cloudinary.com/dkbxi5qts/image/upload/v1660479354/Group_7399_nn7x3u.png\"\n        />\n        <div className=\"login-form-container\">\n          <h1 className=\"login-heading\">Login</h1>\n          <form onSubmit={this.submitLogin} className=\"login-form\">\n            <label className=\"login-label\" htmlFor=\"usernameInput\">\n              USERNAME\n            </label>\n            <input\n              value={username}\n              onChange={this.getUsername}\n              placeholder=\"Username\"\n              className=\"login-input1\"\n              type=\"text\"\n              id=\"usernameInput\"\n            />\n            <label className=\"login-label\" htmlFor=\"passwordInput\">\n              PASSWORD\n            </label>\n            <input\n              value={password}\n              placeholder=\"Password\"\n              onChange={this.getPassword}\n              className=\"login-input2\"\n              type=\"password\"\n              id=\"passwordInput\"\n            />\n            {errMsg.length > 0 && <p className=\"err-msg\">{errMsg}</p>}\n            <button className=\"sign-in-btn\" type=\"submit\">\n              Login\n            </button>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Login\n","import {Link} from 'react-router-dom'\n\nimport './index.css'\n\nconst MovieItems = props => {\n  const {eachMovie} = props\n  const {posterPath, title, id} = eachMovie\n\n  return (\n    <Link to={`/movies/${id}`}>\n      <li>\n        <img className=\"popular-img\" alt={title} src={posterPath} />\n      </li>\n    </Link>\n  )\n}\n\nexport default MovieItems\n","import './index.css'\n\nconst FailurePage = props => {\n  const {tryAgain} = props\n\n  const onTryAgain = () => {\n    tryAgain()\n  }\n\n  return (\n    <div className=\"failure-view\">\n      <img\n        className=\"failure-img\"\n        alt=\"failure view\"\n        src=\"https://res.cloudinary.com/dkbxi5qts/image/upload/v1660153718/movies%20prime%20app/failure_img_vggqi4.svg\"\n      />\n      <p className=\"failure-text\">Something went wrong. Please try again</p>\n      <button onClick={onTryAgain} className=\"retry-btn\" type=\"button\">\n        Try Again\n      </button>\n    </div>\n  )\n}\n\nexport default FailurePage\n","import {Component} from 'react'\nimport Loader from 'react-loader-spinner'\nimport Cookies from 'js-cookie'\n\nimport MovieItems from '../MovieItems'\nimport Footer from '../Footer'\nimport FailurePage from '../FailurePage'\nimport NavBar from '../NavBar'\nimport './index.css'\n\nconst renderConstraints = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  fail: 'FAIL',\n  loading: 'LOADING',\n}\n\nconst isPopular = true\n\nclass Popular extends Component {\n  state = {popularMoviesList: [], renderStatus: renderConstraints.initial}\n\n  componentDidMount() {\n    this.getPopularMoviesData()\n  }\n\n  getPopularMoviesData = async () => {\n    this.setState({renderStatus: renderConstraints.loading})\n    const jwtToken = Cookies.get('jwt_token')\n    const popularMoviesApi = 'https://apis.ccbp.in/movies-app/popular-movies'\n    const options = {\n      method: 'GET',\n      headers: {Authorization: `Bearer ${jwtToken}`},\n    }\n    const response = await fetch(popularMoviesApi, options)\n    if (response.ok) {\n      const data = await response.json()\n      const fetchedPopularMoviesData = data.results.map(eachMovie => ({\n        backdropPath: eachMovie.backdrop_path,\n        id: eachMovie.id,\n        posterPath: eachMovie.poster_path,\n        title: eachMovie.title,\n      }))\n      this.setState({\n        popularMoviesList: fetchedPopularMoviesData,\n        renderStatus: renderConstraints.success,\n      })\n    } else {\n      this.setState({renderStatus: renderConstraints.fail})\n    }\n  }\n\n  tryAgainPopularData = () => {\n    this.getPopularMoviesData()\n  }\n\n  renderFailureView = () => <FailurePage tryAgain={this.tryAgainPopularData} />\n\n  renderSuccessView = () => {\n    const {popularMoviesList} = this.state\n    return (\n      <>\n        <ul className=\"popular-items\">\n          {popularMoviesList.map(eachMovie => (\n            <MovieItems eachMovie={eachMovie} key={eachMovie.id} />\n          ))}\n        </ul>\n        <Footer />\n      </>\n    )\n  }\n\n  renderLoaderView = () => (\n    <div className=\"loader-container\" testid=\"loader\">\n      <Loader type=\"TailSpin\" color=\"#D81F26\" height={50} width={50} />\n    </div>\n  )\n\n  renderSwitchView = () => {\n    const {renderStatus} = this.state\n    switch (renderStatus) {\n      case renderConstraints.loading:\n        return this.renderLoaderView()\n      case renderConstraints.success:\n        return this.renderSuccessView()\n      case renderConstraints.fail:\n        return this.renderFailureView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar isPopular={isPopular} />\n        {this.renderSwitchView()}\n      </div>\n    )\n  }\n}\n\nexport default Popular\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport Loader from 'react-loader-spinner'\n\nimport MovieItems from '../MovieItems'\nimport FailurePage from '../FailurePage'\nimport NavBar from '../NavBar'\nimport './index.css'\n\nconst searchRoute = true\n\nconst renderConstraints = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  fail: 'FAIL',\n  loading: 'LOADING',\n}\n\nclass SearchPage extends Component {\n  state = {\n    searchResultsList: [],\n    renderStatus: renderConstraints.initial,\n    searchValue: '',\n  }\n\n  getSearchMoviesData = async searchValue => {\n    this.setState({renderStatus: renderConstraints.loading})\n    const jwtToken = Cookies.get('jwt_token')\n    const searchApi = `https://apis.ccbp.in/movies-app/movies-search?search=${searchValue}`\n    const options = {\n      method: 'GET',\n      headers: {Authorization: `Bearer ${jwtToken}`},\n    }\n    const response = await fetch(searchApi, options)\n    if (response.ok) {\n      const data = await response.json()\n      const fetchedSearchMoviesData = data.results.map(eachMovie => ({\n        backdropPath: eachMovie.backdrop_path,\n        id: eachMovie.id,\n        posterPath: eachMovie.poster_path,\n        title: eachMovie.title,\n      }))\n      this.setState({\n        searchResultsList: fetchedSearchMoviesData,\n        renderStatus: renderConstraints.success,\n        searchValue,\n      })\n    } else {\n      this.setState({renderStatus: renderConstraints.fail})\n    }\n  }\n\n  renderSuccessView = () => {\n    const {searchResultsList} = this.state\n    return searchResultsList.length > 0 ? (\n      <ul className=\"search-items\">\n        {searchResultsList.map(eachMovie => (\n          <MovieItems eachMovie={eachMovie} key={eachMovie.id} />\n        ))}\n      </ul>\n    ) : (\n      this.renderNoResultsView()\n    )\n  }\n\n  renderNoResultsView = () => {\n    const {searchValue} = this.state\n\n    return (\n      <div className=\"no-results-view\">\n        <img\n          className=\"no-results-img\"\n          alt=\"no movies\"\n          src=\"https://res.cloudinary.com/dkbxi5qts/image/upload/v1660153718/movies%20prime%20app/No_Views_awtv8d.svg\"\n        />\n        <p className=\"no-results-text\">\n          Your search for {searchValue} did not find any matches.\n        </p>\n      </div>\n    )\n  }\n\n  renderLoaderView = () => (\n    <div className=\"loader-container\" testid=\"loader\">\n      <Loader type=\"TailSpin\" color=\"#D81F26\" height={50} width={50} />\n    </div>\n  )\n\n  tryAgainSearchData = () => {\n    this.getSearchMoviesData()\n  }\n\n  renderFailureView = () => <FailurePage tryAgain={this.tryAgainSearchData} />\n\n  renderSwitchView = () => {\n    const {renderStatus} = this.state\n    switch (renderStatus) {\n      case renderConstraints.loading:\n        return this.renderLoaderView()\n      case renderConstraints.success:\n        return this.renderSuccessView()\n      case renderConstraints.fail:\n        return this.renderFailureView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <NavBar\n          getSearchMoviesData={this.getSearchMoviesData}\n          searchRoute={searchRoute}\n        />\n        <div className=\"search-container\">{this.renderSwitchView()}</div>\n      </>\n    )\n  }\n}\n\nexport default SearchPage\n","import './index.css'\n\nconst SimilarMovies = props => {\n  const {eachMovie} = props\n  const {posterPath, title} = eachMovie\n\n  return <img className=\"similar-movies-img\" alt={title} src={posterPath} />\n}\n\nexport default SimilarMovies\n","import {Component} from 'react'\nimport {format} from 'date-fns'\nimport Loader from 'react-loader-spinner'\nimport Cookies from 'js-cookie'\n\nimport SimilarMovies from '../SimilarMovies'\nimport Footer from '../Footer'\nimport FailurePage from '../FailurePage'\nimport NavBar from '../NavBar'\nimport './index.css'\n\nconst AvailableLanguages = props => {\n  const {eachItem} = props\n  const {englishName} = eachItem\n  return (\n    <li className=\"info-items list-item\">\n      <p>{englishName}</p>\n    </li>\n  )\n}\n\nconst GenreList = props => {\n  const {eachItem} = props\n  const {name} = eachItem\n  return (\n    <li className=\"info-items list-item\">\n      <p>{name}</p>\n    </li>\n  )\n}\n\nconst renderConstraints = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  fail: 'FAIL',\n  loading: 'LOADING',\n}\n\nclass MovieDetails extends Component {\n  state = {movieDetailsList: [], renderStatus: renderConstraints.initial}\n\n  componentDidMount() {\n    this.getMovieDetails()\n  }\n\n  getMovieDetails = async () => {\n    this.setState({renderStatus: renderConstraints.loading})\n    const jwtToken = Cookies.get('jwt_token')\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n    const movieDetailsApi = `https://apis.ccbp.in/movies-app/movies/${id}`\n    const options = {\n      method: 'GET',\n      headers: {Authorization: `Bearer ${jwtToken}`},\n    }\n    const response = await fetch(movieDetailsApi, options)\n    if (response.ok) {\n      const data = await response.json()\n      const updatedGenreList = data.movie_details.genres.map(eachGenre => ({\n        id: eachGenre.id,\n        name: eachGenre.name,\n      }))\n      const updatedSimilarMovies = data.movie_details.similar_movies.map(\n        eachMovie => ({\n          backdropPath: eachMovie.backdrop_path,\n          id: eachMovie.id,\n          posterPath: eachMovie.poster_path,\n          title: eachMovie.title,\n        }),\n      )\n      const updatedSpokenLanguages = data.movie_details.spoken_languages.map(\n        eachLanguage => ({\n          id: eachLanguage.id,\n          englishName: eachLanguage.english_name,\n        }),\n      )\n      const updatedData = {\n        adult: data.movie_details.adult,\n        backdropPath: data.movie_details.backdrop_path,\n        budget: data.movie_details.budget,\n        genres: updatedGenreList,\n        id: data.movie_details.id,\n        overview: data.movie_details.overview,\n        posterPath: data.movie_details.poster_path,\n        releaseDate: data.movie_details.release_date,\n        runtime: data.movie_details.runtime,\n        similarMovies: updatedSimilarMovies,\n        spokenLanguages: updatedSpokenLanguages,\n        title: data.movie_details.title,\n        voteAverage: data.movie_details.vote_average,\n        voteCount: data.movie_details.vote_count,\n      }\n      this.setState({\n        movieDetailsList: updatedData,\n        renderStatus: renderConstraints.success,\n      })\n    } else {\n      this.setState({renderStatus: renderConstraints.fail})\n    }\n  }\n\n  tryAgainMoviesData = () => {\n    this.getMovieDetails()\n  }\n\n  renderLoaderView = () => (\n    <>\n      <NavBar />\n      <div className=\"loader-container\" testid=\"loader\">\n        <Loader type=\"TailSpin\" color=\"#D81F26\" height={50} width={50} />\n      </div>\n    </>\n  )\n\n  renderFailureView = () => (\n    <>\n      <NavBar />\n      <FailurePage tryAgain={this.tryAgainMoviesData} />\n    </>\n  )\n\n  renderSuccessView = () => {\n    const {movieDetailsList} = this.state\n\n    const {\n      adult,\n      backdropPath,\n      budget,\n      genres,\n      overview,\n      releaseDate,\n      runtime,\n      similarMovies,\n      spokenLanguages,\n      title,\n      voteAverage,\n      voteCount,\n    } = movieDetailsList\n    // console.log\n    const inHours = Math.floor(runtime / 60)\n    const inMinutes = runtime % 60\n    const runTimeInHoursAndMinutes = `${inHours}h ${inMinutes}m`\n    const certificateName = adult ? 'A' : 'U/A'\n    const releaseYear = format(new Date(releaseDate), 'yyyy')\n    const releaseDateFormat = format(new Date(releaseDate), 'do MMMM yyyy')\n    return (\n      <>\n        <div\n          style={{backgroundImage: `url(${backdropPath})`}}\n          className=\"movie-detail-page\"\n        >\n          <NavBar />\n          <div className=\"movie-detail-movie-page\">\n            <h1 className=\"title\">{title}</h1>\n            <div className=\"more-details\">\n              <p className=\"duration\">{runTimeInHoursAndMinutes}</p>\n              <p className=\"certificate\">{certificateName}</p>\n              <p className=\"release-year\">{releaseYear}</p>\n            </div>\n            <p className=\"over-view\">{overview}</p>\n            <button type=\"button\" className=\"play-btn\">\n              Play\n            </button>\n          </div>\n        </div>\n        <div className=\"additional-information\">\n          <div className=\"movie-info\">\n            <div className=\"info\">\n              <h1 className=\"info-heading\">Genres</h1>\n              <ul className=\"list-items\">\n                {genres.map(eachItem => (\n                  <GenreList eachItem={eachItem} key={eachItem.id} />\n                ))}\n              </ul>\n            </div>\n            <div className=\"info\">\n              <h1 className=\"info-heading\">Audio Available</h1>\n              <ul className=\"list-items\">\n                {spokenLanguages.map(eachItem => (\n                  <AvailableLanguages eachItem={eachItem} key={eachItem.id} />\n                ))}\n              </ul>\n            </div>\n            <div className=\"info\">\n              <h1 className=\"info-heading\">Rating Count</h1>\n              <p className=\"info-items info-name\">{voteCount}</p>\n              <h1 className=\"info-heading\">Rating Average</h1>\n              <p className=\"info-items info-name\">{voteAverage}</p>\n            </div>\n            <div className=\"info info1\">\n              <h1 className=\"info-heading\">Budget</h1>\n              <p className=\"info-items info-name\">{budget}</p>\n              <h1 className=\"info-heading\">Release Date</h1>\n              <p className=\"info-items info-name\">{releaseDateFormat}</p>\n            </div>\n          </div>\n          <div className=\"similar-movies-container\">\n            <h1 className=\"more-like-this-text\">More like this</h1>\n            <div className=\"similar-movies-list\">\n              {similarMovies.map(eachMovie => (\n                <SimilarMovies eachMovie={eachMovie} key={eachMovie.id} />\n              ))}\n            </div>\n          </div>\n          <Footer />\n        </div>\n      </>\n    )\n  }\n\n  renderSwitchView = () => {\n    const {renderStatus} = this.state\n    switch (renderStatus) {\n      case renderConstraints.loading:\n        return this.renderLoaderView()\n      case renderConstraints.success:\n        return this.renderSuccessView()\n      case renderConstraints.fail:\n        return this.renderFailureView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return <>{this.renderSwitchView()}</>\n  }\n}\n\nexport default MovieDetails\n","import Cookies from 'js-cookie'\nimport NavBar from '../NavBar'\nimport Footer from '../Footer'\n\nimport './index.css'\n\nconst isAccount = true\n\nconst AccountPage = props => {\n  const onLogout = () => {\n    Cookies.remove('jwt_token')\n    const {history} = props\n    history.replace('/login')\n  }\n  return (\n    <>\n      <NavBar isAccount={isAccount} />\n      <div className=\"account-page\">\n        <h1 className=\"account-heading\">Account</h1>\n        <hr className=\"separator\" />\n        <div className=\"member-ship-details\">\n          <p className=\"member-ship-text\">Member ship</p>\n          <div className=\"userDetails\">\n            <p className=\"username\">Rahul@gmail.com</p>\n            <p className=\"password\">Password</p>\n            <span>: **********</span>\n          </div>\n        </div>\n        <hr className=\"separator\" />\n        <div className=\"plan-details\">\n          <p className=\"plan-details-text\">Plan details</p>\n          <p className=\"plan-name\">Premium</p>\n          <p className=\"plan-feature\">Ultra HD</p>\n        </div>\n        <hr className=\"separator\" />\n        <button onClick={onLogout} type=\"button\" className=\"log-out-btn\">\n          Logout\n        </button>\n      </div>\n      <Footer />\n    </>\n  )\n}\n\nexport default AccountPage\n","import {Link} from 'react-router-dom'\n\nimport './index.css'\n\nconst NotFoundPage = () => (\n  <div className=\"not-found-view\">\n    <h1 className=\"not-found-heading\">Lost Your Way ?</h1>\n    <p className=\"not-found-desc\">\n      we are sorry, the page you requested could not be found Please go back to\n      the homepage.\n    </p>\n    <Link to=\"/\">\n      <button className=\"go-to-home-btn\" type=\"button\">\n        Go to Home\n      </button>\n    </Link>\n  </div>\n)\n\nexport default NotFoundPage\n","import {Switch, Route} from 'react-router-dom'\n\nimport ProtectedRoute from './components/ProtectedRoute'\nimport Home from './components/Home'\nimport Login from './components/LoginPage'\nimport Popular from './components/Popular'\nimport SearchPage from './components/SearchPage'\nimport MovieDetails from './components/MovieDetails'\nimport AccountPage from './components/AccountPage'\nimport NotFoundPage from './components/NotFoundPage'\n\nimport './App.css'\n\nconst App = () => (\n  <div className=\"main-container\">\n    <Switch>\n      <Route path=\"/login\" exact component={Login} />\n      <ProtectedRoute path=\"/\" exact component={Home} />\n      <ProtectedRoute path=\"/popular\" exact component={Popular} />\n      <ProtectedRoute path=\"/search\" exact component={SearchPage} />\n      <ProtectedRoute path=\"/account\" exact component={AccountPage} />\n      <ProtectedRoute path=\"/movies/:id\" exact component={MovieDetails} />\n      <Route component={NotFoundPage} />\n    </Switch>\n  </div>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter} from 'react-router-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}